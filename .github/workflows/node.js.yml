# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      # Change directory to backend before running npm commands
      - run: |
          cd backend
          touch .env
          echo IP_ADDRESS=localhost >> .env
          echo DATABASE_URL=$DATABASE_URL >> .env
          echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
          echo AWS_SECRET_ACCESS_KEY=$DATABASE_URL >> .env
          echo AWS_REGION=$AWS_REGION >> .env
          echo AWS_BUCKET_NAME=$AWS_BUCKET_NAME >> .env
          echo PORT=3000 >> .env
          echo ENV=GA >> .env
          echo NGROK_AUTHTOKEN=NA >> .env
          echo URL=NA >> .env

      - name: Install Root Dependencies
        run: npm ci

      - name: Install Backend Dependencies
        run: cd backend && npm ci

      - name: Build Backend (if applicable)
        run: cd backend && npm run build --if-present

      - name: Test Backend
        run: cd backend && npm test
